#!/bin/bash

source cs_dirs

sudo localectl set-locale LANG=en_CA.UTF-8

cd $HOME_DIR
git pull && git submodule init && git submodule update && git submodule status

echo 'CONFIGURE: HOME set at $HOME_DIR'
echo 'CONFIGURE: Updating apt-get'
sudo apt-get -y update
sudo apt-get -y install curl

echo 'CONFIGURE: Configuring node repo'
curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -

echo 'CONFIGURE: Installing packages'
sudo apt-get -y install nodejs ffmpeg nginx emacs tmux mc locate libpam0g-dev libssl-dev mc dnsmasq net-tools

echo 'CONFIGURE: Get node scratch-gui deps and build it'
cd $HOME_DIR/scratch-gui
npm install
if [ $? -ne 0 ]
then
  echo 'CONFIGURE: Try again'
  npm install
  if [ $? -ne 0 ]
  then
    echo 'CONFIGURE: And again'
    npm install
  fi
fi

export NODE_ENV=production                                                                          
npm run build                                                                                       
unset NODE_ENV 

echo 'CONFIGURE: Get node scratch-gui assets'
cd $HOME_DIR/scratch-gui/assets
node getassets.js

echo 'CONFIGURE: Get node scratch gui admin deps and build it'
cd $HOME_DIR/scratch-gui/admin
npm install
if [ $? -ne 0 ]
then
  echo 'CONFIGURE: Try again'
  npm install
  if [ $? -ne 0 ]
  then
    echo 'CONFIGURE: And again'
    npm install
  fi
fi

export NODE_ENV=production                                                                          
npm run build                                                                                       
unset NODE_ENV 

echo 'CONFIGURE: Installing web scraper'
cd $HOME_DIR/scripts
npm install "git+https://github.com/kotl/node-website-scraper.git"
npm install

cd $HOME_DIR

echo 'CONFIGURE: Removing ntp -> interfers with dhclient'
sudo apt-get -y remove ntp

echo 'CONFIGURE: Stopping nginx'
sudo service nginx stop
sudo service dnsmasq stop
sudo unlink /etc/nginx/sites-enabled/default

echo 'CONFIGURE: Copying nginx config over to /etc/nginx/'
sudo cp -a $HOME_DIR/nginx/* /etc/nginx/

echo 'CONFIGURE: generate new nginx and expressjs/scratch config'
sudo cp $HOME_DIR/data/scratch.service /etc/systemd/system/

echo 'CONFIGURE: Copy dns configs'
sudo cp -a $HOME_DIR/data/cs.conf /etc/dnsmasq.d/

echo 'CONFIGURE: Adjusting web configs'
cd $HOME_DIR/scripts
sudo node $HOME_DIR/scripts/gen_web_configs.js

sudo systemctl enable scratch.service
sudo systemctl start scratch.service

echo 'CONFIGURE: Copy rc.local that determines startup mode'
sudo cp -a $HOME_DIR/data/rc.local /etc/

echo 'CONFIGURE: Copy dhclient config'
sudo cp -a $HOME_DIR/data/dhclient.conf /etc/dhcp/

echo 'CONFIGURE: Copy interfaces'
sudo cp -a $HOME_DIR/data/interfaces /etc/network/

sudo rm -f /etc/rc5.d/S02dnsmasq
sudo rm -f /etc/rc2.d/S02dnsmasq
sudo rm -f /etc/rc4.d/S02dnsmasq
sudo rm -f /etc/rc3.d/S02dnsmasq

echo 'CONFIGURE: Removing default_type in nginx.conf'
sudo grep -v default_type /etc/nginx/nginx.conf > /tmp/nginx.conf
sudo mv /tmp/nginx.conf /etc/nginx/nginx.conf
sudo unlink /etc/nginx/sites-enabled/cs
sudo ln -s /etc/nginx/sites-available/cs /etc/nginx/sites-enabled/cs

echo 'CONFIGURE: Creating directories'
sudo mkdir -p /var/www
sudo ln -s $WWW/cs /var/www/cs

mkdir -p $WWW
mkdir -p $WWW_DOWNLOAD

echo 'CONFIGURE: Starting nginx'
sudo service nginx start

echo 'CONFIGURE: Configure stage is done.'

